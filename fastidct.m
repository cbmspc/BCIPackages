% Fast inverse discrete cosine transform
% based on https://www.nayuki.io/page/fast-discrete-cosine-transform-algorithms

function out = fastidct (in, N)
if size(in,1) == 1
    in = in.';
end
for ch = size(in,2):-1:1
    out(:,ch) = fastidct_2(in(:,ch), N);
end

function out = fastidct_2 (in, N)

in = in(:);
out = in*0;
for i = 0:8:length(in)-8
    out(i+(1:8)) = fastidct_1(in(i+(1:8)));
end
out = out(1:N);

function v = fastidct_1 (v)
S = [
        0.353553390593273762200422
        0.254897789552079584470970
        0.270598050073098492199862
        0.300672443467522640271861
        0.353553390593273762200422
        0.449988111568207852319255
        0.653281482438188263928322
        1.281457723870753089398043
];

A = [
        NaN
        0.707106781186547524400844
        0.541196100146196984399723
        0.707106781186547524400844
        1.306562964876376527856643
        0.382683432365089771728460
];

v15 = v(1) / S(1);
v26 = v(2) / S(2);
v21 = v(3) / S(3);
v28 = v(4) / S(4);
v16 = v(5) / S(5);
v25 = v(6) / S(6);
v22 = v(7) / S(7);
v27 = v(8) / S(8);

v19 = (v25 - v28) / 2;
v20 = (v26 - v27) / 2;
v23 = (v26 + v27) / 2;
v24 = (v25 + v28) / 2;

v7  = (v23 + v24) / 2;
v11 = (v21 + v22) / 2;
v13 = (v23 - v24) / 2;
v17 = (v21 - v22) / 2;

v8 = (v15 + v16) / 2;
v9 = (v15 - v16) / 2;

v18 = (v19 - v20) * A(6);
v12 = (v19 * A(5) - v18) / (A(3) * A(6) - A(3) * A(5) - A(5) * A(6));
v14 = (v18 - v20 * A(3)) / (A(3) * A(6) - A(3) * A(5) - A(5) * A(6));

v6 = v14 - v7;
v5 = v13 / A(4) - v6;
v4 = -v5 - v12;
v10 = v17 / A(2) - v11;

v0 = (v8 + v11) / 2;
v1 = (v9 + v10) / 2;
v2 = (v9 - v10) / 2;
v3 = (v8 - v11) / 2;

v(1) = (v0 + v7) / 2;
v(2) = (v1 + v6) / 2;
v(3) = (v2 + v5) / 2;
v(4) = (v3 + v4) / 2;
v(5) = (v3 - v4) / 2;
v(6) = (v2 - v5) / 2;
v(7) = (v1 - v6) / 2;
v(8) = (v0 - v7) / 2;
